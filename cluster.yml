---
- hosts: all
  sudo: yes

  tasks:
    - name: Set global cluster variable facts
      set_fact:
        zk_endpoint: "zk://{{ groups['mesos-masters'] | join(':2181,') }}:2181"

    - name: Set global mesos variable facts
      set_fact:
        mesos_zk: "{{ zk_endpoint }}/mesos"

    - name: Set global marathon variable facts
      set_fact:
        marathon_host_servers: "{{ groups['mesos-masters'] }}"
        marathon_zk: "{{ zk_endpoint }}/marathon"

  roles:
    - common

- hosts: cdh5-all
  gather_facts: false
  sudo: yes
  vars:
    - zookeeper_servers: "{{ groups['mesos-masters'] }}"
    - zk_servers_noproto: "{{ groups['mesos-masters'] | join(':2181,') }}:2181"
    - quorum_size: "{{ ((groups['mesos-masters'] | length) / 2) | round(0, 'ceil') | int }}"
  roles:
  - { role: cdh5-base }

# Mesos masters
- hosts: mesos-masters
  gather_facts: false
  sudo: yes

  vars:
    - zookeeper_servers: "{{ groups['mesos-masters'] }}"
    - mesos_quorum: "{{ ((groups['mesos-masters'] | length) / 2) | round(0, 'ceil') | int }}"
    - zk_servers_noproto: "{{ groups['mesos-masters'] | join(':2181,') }}:2181"

  roles:
    - { role: zookeeper, tags: [ 'zookeeper' ] }
    - { role: mesosphere, tags: [ 'mesos' ], mesos_mode: master }
    - { role: marathon, tags: [ 'marathon'] }
    - { role: chronos, tags: [ 'chronos'] }

# Mesos slaves
- hosts: mesos-slaves
  gather_facts: false
  sudo: yes

  vars:
    - mesos_options_slave:
        containerizers: "docker,mesos"
        executor_registration_timeout: 5mins
    - zk_servers_noproto: "{{ groups['mesos-masters'] | join(':2181,') }}:2181"
    #- bamboo_env: "BAMBOO_ZK_HOST={{ groups['mesos-masters'] | join(':2181,') }}:2181"

  roles:
    - { role: mesosphere, tags: [ 'mesos' ], mesos_mode: slave }
    - { role: marathon, tags: [ 'marathon'], marathon_run_mode: bridge }
    #- { role: bamboo-haproxy, tags: [ 'bamboo'] }

# Kafka
- hosts: kafka-nodes
  gather_facts: false
  sudo: yes

  vars:
    - zk_servers_noproto: "{{ groups['mesos-masters'] | join(':2181,') }}:2181"
    - K_VERSION: 0.8.1.1
    - K_BUILD: kafka_2.9.2-{{K_VERSION}}
    - K_DATA_DIR: /var/data/kafka
    - Z_VERSION: 3.4.6
    - Z_BUILD: zookeeper-{{Z_VERSION}}
    - Z_DATA_DIR: /var/data/zookeeper

  roles:
    - { role: kafka, tags: [ 'kafka'], broker_id: 1 }


- hosts: cdh5-journalnode
  gather_facts: false
  sudo: yes
  roles:
  - { role: cdh5-journalnode }

- hosts: cdh5-namenode-primary
  gather_facts: false
  sudo: yes
  roles: 
  - cdh5-namenode-primary

- hosts: cdh5-namenode-backup
  sudo: yes
  roles:
  - cdh5-namenode-backup

- hosts: cdh5-namenodes
  sudo: yes
  tasks:
  - name: start zkfc for namenodes
    service: name=hadoop-hdfs-zkfc state=started
    tags:
    - cdh5-namenode-primary
    - cdh5-namenode-primary-zkfc

- hosts: cdh5-httpfs
  sudo: yes
  roles:
  - cdh5-httpfs

- hosts: cdh5-datanodes
  gather_facts: false
  sudo: yes
  roles:
  - { role: cdh5-slave }

- hosts: cdh5-namenode-primary
  sudo: yes
  tasks:
  - name: create tmp directory
    shell: creates={{ item }} sudo -u hdfs hadoop fs -mkdir -p /tmp; sudo -u hdfs hadoop fs -chmod -R 1777 /tmp && touch {{ item }}
    with_items:
    - /var/hadoop/.status/tmp_dir.created
    tags:
    - cdh5-namenode-primary
    - cdh5-namenode-primary-tmpdir

- hosts: spark-masters
  sudo: yes
  roles:
  - { role: spark-master }
